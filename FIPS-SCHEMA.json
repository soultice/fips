{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "FIPS",
  "description": "Rulesets for FIPS",
  "type": "array",
  "items": {
    "title": "A rule",
    "type": "object",
    "properties": {
      "forwardUri": {
        "description": "FIPS will match via regex any incoming request against this URI"
      },
      "name": {
        "description": "This name will be displayed when the rule appears in the TUI",
        "type": "string"
      },
      "headers": {
        "description": "Append these headers to the result (response) of a request",
        "type": "object"
      },
      "forwardHeaders": {
        "description": "Forward these headers to the target",
        "type": "array",
        "items": {
          "type": "object"
        }
      },
      "backwardHeaders": {
        "description": "Forward these headers to the client",
        "type": "array",
        "items": {
          "type": "object"
        }
      },
      "matchMethods": {
        "description": "Match the request method against these methods. Only apply the rule if the method matches",
        "type": "array",
        "items": {
          "type": "string",
          "pattern": "^(GET|POST|PATCH|PUT|DELETE|OPTIONS|HEAD|TRACE|CONNECT)$"
        }
      },
      "matchProbablity": {
        "description": "Apply this rule with set probability, be sure to provide a fallback",
        "type": "number"
      },
      "matchBodyContains": {
        "description": "Match the request body against this string. Only apply the rule if the body contains this string",
        "type": "string"
      },
      "sleep": {
        "description": "Sleep for this amount of time before returning the response",
        "type": "number"
      },
      "rules": {
        "description": "Rules to apply to the request, if empty but a fowardUri is specified, FIPS is in Proxy mode",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "path": {
              "description": "The path to the json field to apply the rule to (use JSONpath)",
              "type": "string"
            },
            "item": {
              "description": "The value to apply to the field",
              "type": "object"
            }
          },
          "required": ["type", "path"]
        }
      }
    },
    "unevaluatedProperties": false
  }
}
